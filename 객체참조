case1)
파이썬>
함수 외부에서: b->int객체 x0->1일때
명령어:함수f 내에서 b의 값을 2로 할당한다
실행:
함수내에서는 b->int객체 x1->2이고
b->int객체 x1 참조는 함수 밖에서 끊어진다.
함수 실행 후 b->int객체 x0->1이므로 b는 1이다.
코드:
b=1
def f():
b=2
f()
print(b) #출력:1
case2-1)
함수 외부에서: b->list 객체 L1->int 객체 x0->1
명령어:함수f 내에서 list객체 L1을 list 객체 L2로 새로 할당한다
실행:
함수 내에서는 b->list객체 L2->int 객체 x1->2이고
b->list객체 L2 참조는 함수 밖에서 끊어진다.
함수 실행 후 b->list 객체 L1->int 객체 x0->1 이므로 b는 [1]이다.
코드:
b=[1]
def f():
b=[2]
f()
print(b) #출력:[1]
case2-2)
함수 외부에서:b->list 객체 L1->int 객체 x0->1
명령어:함수f 내에서 int객체 x0을 int객체 x1으로 새로 할당한다.
실행:
함수 내에서는 b->list 객체 L1->int 객체 x1->2 이고
b->list 객체 L1 참조는 함수 밖에서 끊어진다.
함수 실행 후 b->list 객체 L1->int 객체 x1->2 이므로 b는 [2]이다.
코드:
b=[1]
def f():
b[0]=2
f()
print(b) #출력:[2]
case3-1)
함수 외부에서:b->tuple 객체 T1->int 객체 x0->1
명령어:함수f 내에서 int 객체 x0을 int객체 x1으로 새로 할당한다.
실행:
함수 내에서는 b->tuple 객체T2->int 객체x1->2 이고
b->tuple 객체T2 참조는 함수 밖에서 끊어진다.
함수 실행 후 b->tuple 객체 T1->int 객체 x0->1 이므로 b는 (1,)이다.
코드:
b=(1,)
def f():
b[0]=(2,)
f()
print(b) #출력:(1,)
case3-2)
함수 외부에서:b->tuple 객체 T1->리스트 객체L1->int객체 x0->1
명령어:함수f 내에서 int객체 x0을 int객체 x1으로 새로 할당한다.
실행:
함수 내에서는 b->tuple 객체 T1->리스트 객체L1->int객체 x1->2 이고
b->tuple 객체 T1 참조는 함수 밖에서 끊어진다.
함수 실행 후 b->tuple 객체 T1->리스트 객체L1->int객체 x1->2 이므로 b는 ([2],)이다.
코드:
b=([1],)
def f():
b[0][0]=2
f()
print(b) #출력:([2],)
case4)
b->tuple 객체 T1->int 객체 x0->1
a->tuple 객체 T1->int 객체 x0->1
일때
명령어:b가 참조하는 int객체 x0을 int객체 x1으로 새로 할당해라.
b->tuple 객체T2->int 객체x1->2
a->tuple 객체 T1->int 객체 x0->1
으로 변경됨.
코드:
b=(1,)
a=b
b[0]=2
print(a) #출력:(1,)
print(b) #출력:(2,)
case5)
b->tuple 객체 T1->리스트 객체L1->int객체 x0->1
a->tuple 객체 T1->리스트 객체L1->int객체 x0->1
일때
명령어:b가 참조하는 int객체 x0을 int객체 x1으로 새로 할당해라.
b->tuple 객체 T1->리스트 객체L1->int객체 x1->2
a->tuple 객체 T1->리스트 객체L1->int객체 x1->2
이므로 b는 ([2],)이고 a는 ([2],)이다.
코드:
b=([1],)
a=b
b[0][0]=2
print(a) #출력:([2],)
print(b) #출력:([2],)
